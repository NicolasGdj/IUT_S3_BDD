/*Q10* /
CREATE OR REPLACE VIEW PROF_INFO AS SELECT NUM_PROF, NOM_PROF, PRENOM_PROF FROM PROF WHERE NUM_PROF IN (
    SELECT DISTINCT(PROF.NUM_PROF) FROM PROF, ENSEIGNT WHERE PROF.NUM_PROF=ENSEIGNT.NUM_PROF
);

SELECT * FROM PROF_INFO;

/*Q11* /
CREATE OR REPLACE VIEW DIS AS SELECT * FROM MODULE WHERE DISCIPLINE IN ('INFORMATIQUE', 'GESTION', 'MATHS') WITH CHECK OPTION;
INSERT INTO DIS VALUES (1500, 'Test', 50, 50, 50, 50, 'ANGLAIS', 2, 2, 2, 'BD');

ROLLBACK;

/*Q12* /
CREATE OR REPLACE VIEW RESP_ENS AS 
    SELECT * FROM MODULE WHERE (RESP, CODE) IN (
        SELECT NUM_PROF, CODE FROM ENSEIGNT
    )
    WITH CHECK OPTION;
    
INSERT INTO RESP_ENS VALUES (1500, 'Test', 50, 50, 50, 50, 'ANGLAIS', 2, 2, 2, 'BD');
INSERT INTO RESP_ENS VALUES ('ASCI', 'ASCI MODULE', 50, 50, 50, 50, 'INFORMATIQUE', 2, 2, 1, 'PINFO2');

ROLLBACK;

/*Q13* /
CREATE OR REPLACE VIEW ADD_ENS AS 
    SELECT * FROM ENSEIGNT WHERE CODE IN (SELECT CODE FROM MODULE) AND NUM_PROF IN (SELECT NUM_PROF FROM PROF) AND NUM_ET IN (SELECT NUM_ET FROM ETUDIANT)
WITH CHECK OPTION;

INSERT INTO ADD_ENS VALUES ('BD', 1, 1101);
INSERT INTO ADD_ENS VALUES ('BD', 1, 1);

ROLLBACK;

/*Q14* /
COMMIT;

CREATE OR REPLACE VIEW REMOVE_MODULE AS 
    SELECT * FROM MODULE WHERE CODE NOT IN (SELECT CODE FROM ENSEIGNT) AND CODE NOT IN (SELECT CODE FROM NOTATION) AND CODE NOT IN (SELECT CODEPERE FROM MODULE)
WITH CHECK OPTION;


SELECT * FROM REMOVE_MODULE;
DELETE FROM REMOVE_MODULE WHERE CODE='BD';
DELETE FROM REMOVE_MODULE WHERE CODE='SW';

ROLLBACK;

/*Q15* /
GRANT SELECT ON ETUDIANT TO PUBLIC;

/*Q16* /
SELECT * FROM et4135.ETUDIANT WHERE VILLE_ET = 'MARSEILLE';
DELETE et4135.ETUDIANT WHERE VILLE_ET = 'MARSEILLE';

/*Q17* /
GRANT SELECT, UPDATE ON PROF TO et4135;
SELECT  * FROM et4135.PROF;
UPDATE et4135.PROF SET PRENOM_PROF='NICOLAS', NOM_PROF='GUERROUDJ';
COMMIT;

/*Q18* /
DECLARE
    CURSOR C IS SELECT CODE, LIBELLE FROM MODULE;
BEGIN
    FOR c_tuple in C LOOP
        SYS.DBMS_OUTPUT.PUT_LINE(c_tuple.CODE||' '||c_tuple.LIBELLE);
    END LOOP;
END;

/*Q19*/
COMMIT;

CREATE TABLE GROUPE (
    NUMERO NUMBER(1,0),
    ANNEE NUMBER(2,0),
    EFFECTIF NUMBER(2,0)
);  

DECLARE
    NUM_GROUPE NUMBER(2,0);
    EFF NUMBER(3,0);
BEGIN
    SELECT MAX(DISTINCT GROUPE) INTO NUM_GROUPE FROM ETUDIANT;
    FOR g IN 1..NUM_GROUPE LOOP
        SELECT COUNT(*) INTO EFF FROM ETUDIANT WHERE GROUPE = g AND ANNEE=2;
        INSERT INTO GROUPE VALUES (g, 2, EFF);
    END LOOP;
END;

ROLLBACK;